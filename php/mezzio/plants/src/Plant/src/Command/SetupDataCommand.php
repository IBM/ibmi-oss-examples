<?php

declare(strict_types=1);

/**
 * SetupDataCommand.php
 *
 * @author: Yeshua Hall <yeshua@sobo.red>
 * @date: 8/23/22
 */

namespace Plant\Command;

use Exception;
use Plant\Entity\PlantEntity;
use Plant\TableGateway\PlantTableGateway;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Style\SymfonyStyle;

class SetupDataCommand extends Command
{
    private PlantTableGateway $plantModel;
    protected static $defaultName = 'plant:setup-data';
    protected static $defaultDescription = 'Setup example data for plant module.';

    public function __construct(PlantTableGateway $plantModel, string $name = null)
    {
        $this->plantModel = $plantModel;
        parent::__construct($name);
    }

    protected function configure() : void
    {
        $this->setName(self::$defaultName);
    }

    protected function execute(InputInterface $input, OutputInterface $output) : int
    {
        $io = new SymfonyStyle($input, $output);
        $db2Conn = $this->plantModel->getAdapter()->getDriver()->getConnection();

        $dropPlants = "DROP TABLE IF EXISTS plants";
        $db2Conn->execute($dropPlants);

        $createPlants = <<<SQL
CREATE TABLE plants(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    name varchar(256) not null,
    nickname varchar(256),
    wiki varchar(256)
)
SQL;

        $io->info('Attempting to create PLANTS table.');

        try {
            $db2Conn->execute($createPlants);
        } catch (Exception $e) {
            return $this->error($io, 'Error while creating table: ' . $e->getMessage());
        }

        $io->success('PLANTS table successfully created.');
        $io->info('Attempting to initialize PLANTS records.');

        $plant1 = new PlantEntity();
        $plant1->exchangeArray([
            'name' => 'Monstera deliciosa',
            'wiki' => 'https://en.wikipedia.org/wiki/Monstera_deliciosa',
        ]);
        try {
            $plant1Id = $this->plantModel->save($plant1);
        } catch (Exception $e) {
            return $this->error($io, 'Error while initializing records: ' . $e->getMessage());
        }

        $plant2 = new PlantEntity();
        $plant2->exchangeArray([
            'name' => 'Monstera adansonii',
            'nickname' => 'Swiss cheese plant',
            'wiki' => 'https://en.wikipedia.org/wiki/Monstera_adansonii',
        ]);
        try {
            $plant2Id = $this->plantModel->save($plant2);
        } catch (Exception $e) {
            return $this->error($io, 'Error while initializing records: ' . $e->getMessage());
        }

        $plant3 = new PlantEntity();
        $plant3->exchangeArray([
            'name' => 'Anthurium warocqueanum',
            'nickname' => 'Queen anthurium',
            'wiki' => 'https://en.wikipedia.org/wiki/Anthurium_warocqueanum',
        ]);
        try {
            $plant3Id = $this->plantModel->save($plant3);
        } catch (Exception $e) {
            return $this->error($io, 'Error while initializing records: ' . $e->getMessage());
        }

        $io->success('PLANTS records initialized successfully.');

        $headers = ['ID', 'Name', 'Nickname', 'Wikipedia URL'];
        $data = [
            $this->plantModel->get($plant1Id)->current(),
            $this->plantModel->get($plant2Id)->current(),
            $this->plantModel->get($plant3Id)->current(),
        ];

        $io->table($headers, [
            [$data[0]->id, $data[0]->name, $data[0]->nickname, $data[0]->wiki],
            [$data[1]->id, $data[1]->name, $data[1]->nickname, $data[1]->wiki],
            [$data[2]->id, $data[2]->name, $data[2]->nickname, $data[2]->wiki],
        ]);

        return 0;
    }

    private function error(SymfonyStyle $io, string $message) : int
    {
        $io->error($message);
        return 1;
    }
}
